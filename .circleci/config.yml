version: 2.1

orbs:
  win: circleci/windows@2.2.0

commands:
  checkout-and-yarn-install:
    steps:
      - checkout
      - run:
          name: Versions
          command: yarn versions
      - restore_cache:
          key: yarn-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn install --ignore-engines
      - save_cache:
          key: yarn-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ./yarn.lock
  yarn-prebuild:
    steps:
      - run:
          name: Compile prebuilt binaries
          command: yarn prebuild
  persist-prebuilds:
    steps:
      - persist_to_workspace:
          root: ~/dd-pprof
          paths:
            - prebuilds
  yarn-rebuild:
    steps:
      - run:
          name: Compile native code
          command: yarn rebuild
  yarn-test:
    steps:
      - run:
          name: Unit tests
          command: yarn test

node-bench-sirun-base: &node-bench-sirun-base
  parameters:
    node-version:
      type: string
      default: "latest"
  docker:
    - image: node:<< parameters.node-version >>
  resource_class: medium+
  working_directory: ~/pprof-nodejs
  steps:
    - checkout-and-yarn-install
    - attach_workspace:
        at: ~/dd-pprof
    - run:
        name: Install system deps
        command: apt-get update && apt-get install -y valgrind wget
    - run:
        name: Install sirun
        command: wget https://github.com/DataDog/sirun/releases/download/v0.1.9/sirun-v0.1.9-x86_64-unknown-linux-gnu.tar.gz && tar zxf sirun-v0.1.9-x86_64-unknown-linux-gnu.tar.gz && mv sirun /usr/bin
    - run:
        name: Run sirun
        command: |
          cd benchmark/sirun/$(node -p "process.env.CIRCLE_JOB.replace('node-bench-sirun-', '').replace('-latest', '').replace(/-\d*$/, '')")
          node /root/pprof-nodejs/benchmark/sirun/run-all-variants.js | tee ../$CIRCLE_JOB-sirun-output.ndjson
    - persist_to_workspace:
        root: ~/pprof-nodejs
        paths:
          - benchmark/sirun/*-sirun-output.ndjson

prebuild-linux-base: &prebuild-linux-base
  docker:
    # from node:10.0.0 on 2021-08-30
    # glibc needs to be old enough for older distros
    - image: node@sha256:4013aa6c297808defd01234fce4a42e1ca0518a5bd0260752a86a46542b38206
  working_directory: ~/dd-pprof
  resource_class: medium+
  steps:
    - checkout-and-yarn-install
    - yarn-prebuild
    - persist-prebuilds

prebuild-linux-ia32-base: &prebuild-linux-ia32-base
  <<: *prebuild-linux-base
  steps:
    - run:
        name: Install job dependencies
        command: apt-get update && apt-get install -y g++-multilib python3
    - checkout-and-yarn-install
    - yarn-prebuild
    - persist-prebuilds

test-prebuild-linux-base: &test-prebuild-linux-base
  docker:
    - image: node:slim
  working_directory: ~/dd-pprof
  resource_class: medium+
  steps:
    - checkout-and-yarn-install
    - attach_workspace:
        at: ~/dd-pprof
    - yarn-test

test-prebuild-alpine-base: &test-prebuild-alpine-base
  docker:
    - image: node:slim
  working_directory: ~/dd-pprof
  resource_class: medium+
  steps:
    - run:
        name: Install job dependencies
        command: apk add g++ git make python3
    - checkout-and-yarn-install
    - attach_workspace:
        at: ~/dd-pprof
    - yarn-test

jobs:
  # Linting

  lint:
    docker:
      - image: node
    working_directory: ~/dd-pprof
    resource_class: medium+
    steps:
      - checkout-and-yarn-install
      - run:
          name: Lint
          command: yarn lint

  # Benchmarks

  node-bench-sirun-cpu-profiler: *node-bench-sirun-base
  node-bench-sirun-sampling: *node-bench-sirun-base

  # Prebuilds (linux x64)

  linux-x64-18:
    <<: *prebuild-linux-base
    docker:
      # from node:12.0.0 on 2021-08-30
      - image: node@sha256:c88ef4f7ca8d52ed50366d821e104d029f43e8686120a29541ce0371f333453f
    environment:
      - ARCH=x64
      - NODE_VERSIONS=15 - 18

  linux-x64-12:
    <<: *prebuild-linux-base
    environment:
      - ARCH=x64
      - NODE_VERSIONS=12 - 14

  # Tests (linux x64)

  linux-x64-latest-test:
    <<: *test-prebuild-linux-base
    docker:
      - image: node

  linux-x64-18-test:
    <<: *test-prebuild-linux-base
    docker:
      - image: node:18

  linux-x64-16-test:
    <<: *test-prebuild-linux-base
    docker:
      - image: node:16

  linux-x64-14-test:
    <<: *test-prebuild-linux-base
    docker:
      - image: node:14

  linux-x64-12-test:
    <<: *test-prebuild-linux-base
    docker:
      - image: node:12

  # Prebuilds (linux ia32)

  linux-ia32:
    <<: *prebuild-linux-ia32-base
    environment:
      - ARCH=ia32
      - NODE_VERSIONS=12 - 13

  # Prebuilds (alpine x64)

  alpine-x64: &alpine-base
    docker:
      # from node:alpine on 2021-08-30
      - image: node@sha256:1ee1478ef46a53fc0584729999a0570cf2fb174fbfe0370edbf09680b2378b56
    working_directory: ~/dd-pprof
    resource_class: medium+
    steps:
      - run:
          name: Install job dependencies
          command: apk add g++ git make python3
      - checkout-and-yarn-install
      - yarn-rebuild
      - yarn-test

  # Tests (alpine x64)

  alpine-x64-latest-test:
    <<: *test-prebuild-alpine-base
    docker:
      - image: node:alpine

  alpine-x64-18-test:
    <<: *test-prebuild-alpine-base
    docker:
      - image: node:18-alpine

  alpine-x64-16-test:
    <<: *test-prebuild-alpine-base
    docker:
      - image: node:16-alpine

  alpine-x64-14-test:
    <<: *test-prebuild-alpine-base
    docker:
      - image: node:14-alpine

  alpine-x64-12-test:
    <<: *test-prebuild-alpine-base
    docker:
      - image: node:12-alpine

  # Prebuilds (alpine ia32)

  alpine-ia32:
    <<: *alpine-base
    docker:
      # from i386/node:alpine on 2021-08-30
      - image: i386/node@sha256:c81d659f51a11aea6d73598fce064cf087b21caf9046fbf34530d9f1d43c8ec8

  # Tests (alpine ia32)

  alpine-ia32-13-test:
    <<: *test-prebuild-alpine-base
    docker:
      - image: i386/node:13-alpine

  alpine-ia32-12-test:
    <<: *test-prebuild-alpine-base
    docker:
      - image: i386/node:12-alpine

  # Prebuilds (darwin)

  macos-intel:
    working_directory: ~/dd-pprof
    steps:
      - checkout-and-yarn-install
      - yarn-prebuild
      - yarn-test
      - persist-prebuilds
    macos:
      xcode: "12.2.0"
    environment:
      - ARCH=ia32,x64
      - NODE_VERSIONS=12 - 18

  macos-apple:
    working_directory: ~/dd-pprof
    steps:
      - checkout-and-yarn-install
      - yarn-prebuild
      # TODO: run tests when CircleCI adds Apple silicon executors
      - persist-prebuilds
    macos:
      xcode: "12.5.1"
    environment:
      - ARCH=arm64
      - NODE_VERSIONS=12 - 18

  # Prebuilds (win32 x64)

  windows:
    executor:
      name: win/default
      size: medium
    working_directory: ~/dd-pprof
    steps:
      - checkout-and-yarn-install
      - yarn-prebuild
      - yarn-test
      - persist-prebuilds
    environment:
      - ARCH=ia32,x64
      - NODE_VERSIONS=12 - 18

  # Prebuild Artifacts

  prebuilds:
    docker:
      - image: node
    working_directory: ~/dd-pprof
    resource_class: medium+
    steps:
      - checkout-and-yarn-install
      - attach_workspace:
          at: ~/dd-pprof
      - run:
          name: Create prebuilds archive
          command: yarn prebuilds
      - store_artifacts:
          path: ./prebuilds.tgz
      - store_artifacts:
          path: ./prebuilds.tgz.sha256

workflows:
  version: 2
  build:
    jobs: &jobs
      # Linux x64
      - linux-x64-18
      - linux-x64-12
      - linux-x64-latest-test:
          requires:
            - linux-x64-18
      - linux-x64-18-test:
          requires:
            - linux-x64-18
      - linux-x64-16-test:
          requires:
            - linux-x64-18
      - linux-x64-14-test:
          requires:
            - linux-x64-12
      - linux-x64-12-test:
          requires:
            - linux-x64-12
      # Linux ia32
      - linux-ia32
      - alpine-x64
      - alpine-x64-latest-test:
          requires:
            - alpine-x64
      - alpine-x64-18-test:
          requires:
            - alpine-x64
      - alpine-x64-16-test:
          requires:
            - alpine-x64
      - alpine-x64-14-test:
          requires:
            - alpine-x64
      - alpine-x64-12-test:
          requires:
            - alpine-x64
      - alpine-ia32
      - alpine-ia32-13-test:
          requires:
            - alpine-ia32
      - alpine-ia32-12-test:
          requires:
            - alpine-ia32
      - macos-intel
      - macos-apple
      - windows
      - prebuilds:
          requires:
            - linux-x64-latest-test
            - linux-x64-18-test
            - linux-x64-16-test
            - linux-x64-14-test
            - linux-x64-12-test
            - linux-ia32
            - alpine-x64-latest-test
            - alpine-x64-18-test
            - alpine-x64-16-test
            - alpine-x64-14-test
            - alpine-x64-12-test
            - alpine-ia32-13-test
            - alpine-ia32-12-test
            - macos-intel
            - macos-apple
            - windows
      - node-bench-sirun-cpu-profiler: &matrix-exact-supported-node-versions
          requires:
            - linux-x64-18
            - linux-x64-12
          matrix:
            parameters:
              node-version: ["12", "14", "16", "18"]
      - node-bench-sirun-sampling: *matrix-exact-supported-node-versions
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs: *jobs
